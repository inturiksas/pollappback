package us.pollapp.inturik.businesslogic;

import java.util.Hashtable;
import java.util.List;

import us.pollapp.inturik.dao.BallotDAO;
import us.pollapp.inturik.dao.IBallotDAO;
import us.pollapp.inturik.model.Ballot;
import us.pollapp.inturik.model.Model;
import us.pollapp.inturik.model.User;
import us.pollapp.inturik.util.Error;

public class LBallot {

	private IBallotDAO ballotDAO;

	public LBallot() {
		ballotDAO = new BallotDAO();
	}

	public boolean isUserVote(int idUser, int idModel) throws Exception {

		try {

			long count = ballotDAO.countBallotByModelAndUser(idModel, idUser);

			if (count != 0 && count == 1) {
				return true;
			}

			return false;

		} catch (Exception e) {			
			throw e;
		}

	}

	public Hashtable<Integer, Long> countBallotByModel(List<Integer> lstModels)
			throws Exception {

		try {

			Hashtable<Integer, Long> resultsCountModels = new Hashtable<>();
			long countVoteModel;

			for (Integer idModel : lstModels) {
				countVoteModel = ballotDAO.countBallotByModel(idModel);
				resultsCountModels.put(idModel, countVoteModel);
			}

			return resultsCountModels;

		} catch (Exception e) {
			Error.SendError(LBallot.class.getName(), e.getMessage());
			throw e;
		}

	}

	public void addScoreModel(int idModel, int idUser, double newScore)
			throws Exception {

		try {

			if (idModel > 0 && idUser > 0 && newScore > 0) {

				Ballot objBallot = new Ballot();
				objBallot.setScore(newScore);

				LModels objLmodels = new LModels();
				Model objModel = objLmodels.getModelById(idModel);

				objBallot.setModel(objModel);

				LUser objLuser = new LUser();
				User objUser = objLuser.getUserById(idUser);

				objBallot.setUser(objUser);

				ballotDAO.save(objBallot);
			}

		} catch (Exception e) {
			throw e;
		}

	}

}
